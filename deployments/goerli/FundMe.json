{
  "address": "0x4cf3Cb21cFb6F6A5106871b044bDE5f0fC3E4896",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnoughSent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2dd07a2d99d20e34289bdb3023e7d1cd3f86aa0ae2664aa244297fa1ca6fa58c",
  "receipt": {
    "to": null,
    "from": "0x62185E60Eb76bC4932DdFa4437E376E3De0BD9Cd",
    "contractAddress": "0x4cf3Cb21cFb6F6A5106871b044bDE5f0fC3E4896",
    "transactionIndex": 25,
    "gasUsed": "984051",
    "logsBloom": "0x
    "blockHash": "0xcddc8715065731c45f9ff6b9f170c20859fc0db18c740fdb0cab07d6501bf7cc",
    "transactionHash": "0x2dd07a2d99d20e34289bdb3023e7d1cd3f86aa0ae2664aa244297fa1ca6fa58c",
    "logs": [],
    "blockNumber": 8882671,
    "cumulativeGasUsed": "2906770",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "1e66766c860971ad3c7c7b96cc948c6c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Dexconv\",\"details\":\"this implements pricefeeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"this implements pricefeeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"this function funds this contract\"}},\"notice\":\"this contract is to demmo sammple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n//imports\\nimport \\\"./PriceConvertor.sol\\\";\\n\\n//error codes\\n\\nerror FundMe__NotOwner();\\nerror FundMe__NotEnoughSent();\\n\\n//interface, libraries, contracts\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Dexconv\\n * @notice this contract is to demmo sammple funding contract\\n * @dev this implements pricefeeds as our library\\n */\\ncontract FundMe {\\n    // type declaration\\n    using PriceConvertor for uint256;\\n\\n    // state vaiables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == iOwner, \\\"sender is not the owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /**\\n     * @notice this function funds this contract\\n     * @dev this implements pricefeeds as our library\\n     */\\n    function fund() public payable {\\n        /* require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"not enough sent!\\\"\\n        ); //1e18 = 1eth */\\n\\n        if (msg.value.getConversionRate(s_priceFeed) <= MINIMUM_USD) {\\n            revert FundMe__NotEnoughSent();\\n        }\\n\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address founder = s_funders[i];\\n            s_addressToAmountFunded[founder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        //withdraw the funds\\n\\n        //automatically revevrts\\n        //payable(msg.sender).transfer(address(this).balance);\\n\\n        //returns a bool and should use require to revert\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"send failed!\\\");\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed!\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address founder = funders[i];\\n            s_addressToAmountFunded[founder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x162065aa8b534849204e2f23ab2b7b483aa81cfb63dee03ed940c789f7fd8f3a\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //address : 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 _ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        return (_ethAmount * getPrice(priceFeed)) / 1e18;\\n    }\\n}\\n\",\"keccak256\":\"0x107908d89523bb5f2111b7820eb10b3453e761e7882aa1b6b579eb5e8757c469\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011f3380380620011f3833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61106d6200018660003960008181610361015281816105b00152818161060001526107f6015261106d6000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063be2693f0146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a67565b6102cf565b6040516100cc9190610aad565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610af4565b610317565b6040516101099190610b30565b60405180910390f35b61011a61035f565b005b34801561012857600080fd5b5061013161059f565b60405161013e9190610aad565b60405180910390f35b34801561015357600080fd5b5061015c6105ac565b6040516101699190610b30565b60405180910390f35b34801561017e57600080fd5b506101876105d4565b6040516101949190610baa565b60405180910390f35b6101a56101b1565b005b6101af6105fe565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088c90919063ffffffff16565b11610227576040517fa46dab6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061032d5761032c610bc5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561048f5760006001828154811061040a57610409610bc5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048790610c23565b9150506103e7565b50600067ffffffffffffffff8111156104ab576104aa610c6c565b5b6040519080825280602002602001820160405280156104d95781602001602082028036833780820191505090505b50600190805190602001906104ef92919061095d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051690610ccc565b60006040518083038185875af1925050503d8060008114610553576040519150601f19603f3d011682016040523d82523d6000602084013e610558565b606091505b505090508061059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390610d3e565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610683576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561070757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106bd575b5050505050905060005b815181101561079157600082828151811061072f5761072e610bc5565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078990610c23565b915050610711565b50600067ffffffffffffffff8111156107ad576107ac610c6c565b5b6040519080825280602002602001820160405280156107db5781602001602082028036833780820191505090505b50600190805190602001906107f192919061095d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083890610ccc565b60006040518083038185875af1925050503d8060008114610875576040519150601f19603f3d011682016040523d82523d6000602084013e61087a565b606091505b505090508061088857600080fd5b5050565b6000670de0b6b3a76400006108a0836108bd565b846108ab9190610d5e565b6108b59190610de7565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190610ea5565b5050509150506402540be400816109559190610f20565b915050919050565b8280548282559060005260206000209081019282156109d6579160200282015b828111156109d55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061097d565b5b5090506109e391906109e7565b5090565b5b80821115610a005760008160009055506001016109e8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3482610a09565b9050919050565b610a4481610a29565b8114610a4f57600080fd5b50565b600081359050610a6181610a3b565b92915050565b600060208284031215610a7d57610a7c610a04565b5b6000610a8b84828501610a52565b91505092915050565b6000819050919050565b610aa781610a94565b82525050565b6000602082019050610ac26000830184610a9e565b92915050565b610ad181610a94565b8114610adc57600080fd5b50565b600081359050610aee81610ac8565b92915050565b600060208284031215610b0a57610b09610a04565b5b6000610b1884828501610adf565b91505092915050565b610b2a81610a29565b82525050565b6000602082019050610b456000830184610b21565b92915050565b6000819050919050565b6000610b70610b6b610b6684610a09565b610b4b565b610a09565b9050919050565b6000610b8282610b55565b9050919050565b6000610b9482610b77565b9050919050565b610ba481610b89565b82525050565b6000602082019050610bbf6000830184610b9b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2e82610a94565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6157610c60610bf4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb6600083610c9b565b9150610cc182610ca6565b600082019050919050565b6000610cd782610ca9565b9150819050919050565b600082825260208201905092915050565b7f63616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610d28600c83610ce1565b9150610d3382610cf2565b602082019050919050565b60006020820190508181036000830152610d5781610d1b565b9050919050565b6000610d6982610a94565b9150610d7483610a94565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dad57610dac610bf4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df282610a94565b9150610dfd83610a94565b925082610e0d57610e0c610db8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e3781610e18565b8114610e4257600080fd5b50565b600081519050610e5481610e2e565b92915050565b6000819050919050565b610e6d81610e5a565b8114610e7857600080fd5b50565b600081519050610e8a81610e64565b92915050565b600081519050610e9f81610ac8565b92915050565b600080600080600060a08688031215610ec157610ec0610a04565b5b6000610ecf88828901610e45565b9550506020610ee088828901610e7b565b9450506040610ef188828901610e90565b9350506060610f0288828901610e90565b9250506080610f1388828901610e45565b9150509295509295909350565b6000610f2b82610e5a565b9150610f3683610e5a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f7557610f74610bf4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fb257610fb1610bf4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fef57610fee610bf4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561102c5761102b610bf4565b5b82820290509291505056fea26469706673582212208c2a13c4f871254426ce81ddfc660f4d446c1be2e32fe62fa233965ac3e355d664736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063be2693f0146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a67565b6102cf565b6040516100cc9190610aad565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610af4565b610317565b6040516101099190610b30565b60405180910390f35b61011a61035f565b005b34801561012857600080fd5b5061013161059f565b60405161013e9190610aad565b60405180910390f35b34801561015357600080fd5b5061015c6105ac565b6040516101699190610b30565b60405180910390f35b34801561017e57600080fd5b506101876105d4565b6040516101949190610baa565b60405180910390f35b6101a56101b1565b005b6101af6105fe565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088c90919063ffffffff16565b11610227576040517fa46dab6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061032d5761032c610bc5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561048f5760006001828154811061040a57610409610bc5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048790610c23565b9150506103e7565b50600067ffffffffffffffff8111156104ab576104aa610c6c565b5b6040519080825280602002602001820160405280156104d95781602001602082028036833780820191505090505b50600190805190602001906104ef92919061095d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051690610ccc565b60006040518083038185875af1925050503d8060008114610553576040519150601f19603f3d011682016040523d82523d6000602084013e610558565b606091505b505090508061059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390610d3e565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610683576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561070757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106bd575b5050505050905060005b815181101561079157600082828151811061072f5761072e610bc5565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078990610c23565b915050610711565b50600067ffffffffffffffff8111156107ad576107ac610c6c565b5b6040519080825280602002602001820160405280156107db5781602001602082028036833780820191505090505b50600190805190602001906107f192919061095d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083890610ccc565b60006040518083038185875af1925050503d8060008114610875576040519150601f19603f3d011682016040523d82523d6000602084013e61087a565b606091505b505090508061088857600080fd5b5050565b6000670de0b6b3a76400006108a0836108bd565b846108ab9190610d5e565b6108b59190610de7565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190610ea5565b5050509150506402540be400816109559190610f20565b915050919050565b8280548282559060005260206000209081019282156109d6579160200282015b828111156109d55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061097d565b5b5090506109e391906109e7565b5090565b5b80821115610a005760008160009055506001016109e8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3482610a09565b9050919050565b610a4481610a29565b8114610a4f57600080fd5b50565b600081359050610a6181610a3b565b92915050565b600060208284031215610a7d57610a7c610a04565b5b6000610a8b84828501610a52565b91505092915050565b6000819050919050565b610aa781610a94565b82525050565b6000602082019050610ac26000830184610a9e565b92915050565b610ad181610a94565b8114610adc57600080fd5b50565b600081359050610aee81610ac8565b92915050565b600060208284031215610b0a57610b09610a04565b5b6000610b1884828501610adf565b91505092915050565b610b2a81610a29565b82525050565b6000602082019050610b456000830184610b21565b92915050565b6000819050919050565b6000610b70610b6b610b6684610a09565b610b4b565b610a09565b9050919050565b6000610b8282610b55565b9050919050565b6000610b9482610b77565b9050919050565b610ba481610b89565b82525050565b6000602082019050610bbf6000830184610b9b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2e82610a94565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6157610c60610bf4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb6600083610c9b565b9150610cc182610ca6565b600082019050919050565b6000610cd782610ca9565b9150819050919050565b600082825260208201905092915050565b7f63616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610d28600c83610ce1565b9150610d3382610cf2565b602082019050919050565b60006020820190508181036000830152610d5781610d1b565b9050919050565b6000610d6982610a94565b9150610d7483610a94565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dad57610dac610bf4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df282610a94565b9150610dfd83610a94565b925082610e0d57610e0c610db8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e3781610e18565b8114610e4257600080fd5b50565b600081519050610e5481610e2e565b92915050565b6000819050919050565b610e6d81610e5a565b8114610e7857600080fd5b50565b600081519050610e8a81610e64565b92915050565b600081519050610e9f81610ac8565b92915050565b600080600080600060a08688031215610ec157610ec0610a04565b5b6000610ecf88828901610e45565b9550506020610ee088828901610e7b565b9450506040610ef188828901610e90565b9350506060610f0288828901610e90565b9250506080610f1388828901610e45565b9150509295509295909350565b6000610f2b82610e5a565b9150610f3683610e5a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f7557610f74610bf4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fb257610fb1610bf4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fef57610fee610bf4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561102c5761102b610bf4565b5b82820290509291505056fea26469706673582212208c2a13c4f871254426ce81ddfc660f4d446c1be2e32fe62fa233965ac3e355d664736f6c63430008080033",
  "devdoc": {
    "author": "Dexconv",
    "details": "this implements pricefeeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "this implements pricefeeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "this function funds this contract"
      }
    },
    "notice": "this contract is to demmo sammple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}